package main

import (
	"context"
	"encoding/json"
	"fmt"

	"github.com/adshao/go-binance/v2"
)

func main() {
	var (
		apiKey    = "mlxVdHIyxdRQNG4cTiDy8GMSf1Q10C4iwZQr7Uj2kfBL95KbO99vqK1PTtZLT4h2"
		secretKey = "6a4ADHGMbMAAD34Aw9kqNcTgXWQWLu1bY2u9SmIgWxRgK0jGoMYhCAHXedh3oyMc"
	)
	futuresClient := binance.NewFuturesClient(apiKey, secretKey)

	res, err := futuresClient.NewDepthService().Symbol("BTCUSDT").Do(context.Background())
	if err != nil {
		fmt.Println(err)
		return
	}
	// fmt.Println(res)

	depthVar, _ := json.Marshal(res)
	// fmt.Println(string(depthVar))

	type AutoGenerated struct {
		LastUpdateID int64 `json:"lastUpdateId"`
		E            int64 `json:"E"`
		T            int64 `json:"T"`
		Bids         []struct {
			Price    string `json:"Price"`
			Quantity string `json:"Quantity"`
		} `json:"bids"`
		Asks []struct {
			Price    string `json:"Price"`
			Quantity string `json:"Quantity"`
		} `json:"asks"`
	}

	var autoGenerated AutoGenerated
	json.Unmarshal(depthVar, &autoGenerated)
	fmt.Println(autoGenerated.Asks[0].Price)
}
